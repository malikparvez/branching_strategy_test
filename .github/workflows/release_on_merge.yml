name: Pull Request Merge to Release Prep

on:
  pull_request:
    types:
      - closed

jobs:
  if_merged:
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release-prep')
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: "Get version"
        id: "get_version"
        run: |
          version=$(grep -o "version = '[^']*'" .version | awk -F"'" '{print $2}')
          echo "version=$version" >> $GITHUB_OUTPUT
          latest_tag=$(curl -sL https://api.github.com/repos/${GITHUB_REPOSITORY}/tags | jq -r '.[0].name')
          current_version=$(echo "$latest_tag" | cut -d'.' -f1 | sed 's/[^0-9]//g')
          new_version=$(echo $version | cut -d'.' -f1)
          echo "current_version=$current_version" >> $GITHUB_OUTPUT
 
          if [ "$new_version" -gt "$current_version" ]; then
              echo "new : $new_version"
              echo "main"
              echo "major_version_upgrade=true" >> $GITHUB_OUTPUT
              echo "base_branch=main" >> $GITHUB_OUTPUT
          else
            echo $current_version.0.0
            echo "current: $current_version"
            echo "major_version_upgrade=false" >> $GITHUB_OUTPUT
            echo "base_branch=$current_version.0.0" >> $GITHUB_OUTPUT
          fi
          
      - name: "Create release"
        run: |
          echo "$base_branch"
          gh release create v${{ steps.get_version.outputs.version }} --title v${{ steps.get_version.outputs.version }} --target ${{ steps.get_version.outputs.base_branch }}
          git branch
          ls -lah
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

